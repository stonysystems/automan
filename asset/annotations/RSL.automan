module Collections__CountMatches_i {
    IsNthHighestValueInSequence(+,+,+);
}
module LiveRSL__Acceptor_i {
    IsLogTruncationPointValid(+,+,+);
    RemoveVotesBeforeLogTruncationPoint(+,-,+);
    LAddVoteAndRemoveOldOnes(+,-,+,+,+);
    LAcceptorInit(-,+);
    LAcceptorProcess1a(+,-,+,-);
    LAcceptorProcess2a(+, -, +, -);
    LAcceptorProcessHeartbeat(+, -, +);
    LAcceptorTruncateLog(+, -, +);
}
module LiveRSL__Broadcast_i {
    LBroadcastToEveryone(+,+,+,-);
}
module LiveRSL__Configuration_i {
  ReplicasDistinct(+,+,+);
  IsReplicaIndex(+,+,+);
}
module LiveRSL__Constants_i {
    LReplicaConstantsValid(+);
}
module LiveRSL__DistributedSystem_i {

}
module LiveRSL__Message_i {

}
module LiveRSL__Parameters_i {

}
module LiveRSL__Types_i {

}
module LiveRSL__StateMachine_i {
}
module LiveRSL__Election_i {
  ElectionStateInit(-,+);
  ElectionStateProcessHeartbeat(+,-,+,+);
  ElectionStateCheckForViewTimeout(+,-,+);
  ElectionStateCheckForQuorumOfViewSuspicions(+,-,+);
  ElectionStateReflectReceivedRequest(+,-,+);
  ElectionStateReflectExecutedRequestBatch(+,-,+);
}
module LiveRSL__Environment_i {
  type CPacket = RslPacket;
  type OutboundPackets = seq<RslPacket>;
}
module LiveRSL__Executor_i {
  LExecutorInit(-,+);
  LExecutorGetDecision(+,-,+,+,+);
  UpdateNewCache(+,-,+);
  LExecutorExecute(+,-,-);
  LExecutorProcessAppStateSupply(+,-,+);
  LExecutorProcessAppStateRequest(+,-,+,-);
  LExecutorProcessStartingPhase2(+,-,+,-);
  LExecutorProcessRequest(+,+,-);
}
module LiveRSL__Learner_i {
  LLearnerInit(-,+);
  LLearnerProcess2b(+,-,+);
  LLearnerForgetDecision(+,-,+);
  LLearnerForgetOperationsBefore(+,-,+);
}
module LiveRSL__Proposer_i {
  LProposerInit(-,+);
  LProposerProcessRequest(+,-,+);
  LProposerMaybeEnterNewViewAndSend1a(+,-,-);
  LProposerProcess1b(+,-,+);
  LProposerMaybeEnterPhase2(+,-,+,-);
  LProposerNominateNewValueAndSend2a(+,-,+,+,-);
  LProposerNominateOldValueAndSend2a(+,-,+,-);
  LProposerMaybeNominateValueAndSend2a(+,-,+,+,-);
  LProposerProcessHeartbeat(+,-,+,+);
  LProposerCheckForViewTimeout(+,-,+);
  LProposerCheckForQuorumOfViewSuspicions(+,-,+);
  LProposerResetViewTimerDueToExecution(+,-,+);
}
module LiveRSL__Replica_i {
  LReplicaInit(-,+);
  LReplicaNextProcessInvalid(+,-,+,-);
  LReplicaNextProcessRequest(+,-,+,-);
  LReplicaNextProcess1a(+,-,+,-);
  LReplicaNextProcess1b(+,-,+,-);
  LReplicaNextProcessStartingPhase2(+,-,+,-);
  LReplicaNextProcess2a(+,-,+,-);
  LReplicaNextProcess2b(+,-,+,-);
  LReplicaNextProcessReply(+,-,+,-);
  LReplicaNextProcessAppStateSupply(+,-,+,-);
  LReplicaNextProcessAppStateRequest(+,-,+,-);
  LReplicaNextProcessHeartbeat(+,-,+,+,-);
  LReplicaNextSpontaneousMaybeEnterNewViewAndSend1a(+,-,-);
  LReplicaNextSpontaneousMaybeEnterPhase2(+,-,-);
  LReplicaNextReadClockMaybeNominateValueAndSend2a(+,-,+,-);
  LReplicaNextSpontaneousTruncateLogBasedOnCheckpoints(+,-,-);
  LReplicaNextSpontaneousMaybeMakeDecision(+,-,-);
  LReplicaNextSpontaneousMaybeExecute(+,-,-);
  LReplicaNextReadClockMaybeSendHeartbeat(+,-,+,-);
  LReplicaNextReadClockCheckForViewTimeout(+,-,+,-);
  LReplicaNextReadClockCheckForQuorumOfViewSuspicions(+,-,+,-);
  LReplicaNextReadClockAndProcessPacket(+,-,-);
  LReplicaNextProcessPacketWithoutReadingClock(+,-,-);
  LReplicaNextProcessPacket(+,-,-);

  LSchedulerInit(-,+);
  LSchedulerNext(+,-,-);
}
